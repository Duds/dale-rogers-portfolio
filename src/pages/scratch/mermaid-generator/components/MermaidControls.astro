---
import { BarChart3, X, Download, Save } from 'lucide-astro';
---

<div class="mermaid-controls">
  <div class="control-group">
    <button onclick="window.loadExample()" class="control-button">
      <BarChart3 class="w-5 h-5" />
      Load Example
    </button>
    <button onclick="window.clearDiagram()" class="control-button">
      <X class="w-5 h-5" />
      Clear
    </button>
  </div>

  <div class="control-group">
    <button onclick="window.exportSvg()" class="control-button">
      <Download class="w-5 h-5" />
      Export SVG
    </button>
    <button onclick="window.exportPng()" class="control-button">
      <Download class="w-5 h-5" />
      Export PNG
    </button>
  </div>

  <div class="control-group">
    <button onclick="window.saveTemplate()" class="control-button">
      <Save class="w-5 h-5" />
      Save Template
    </button>
    <button onclick="window.saveTemplateAs()" class="control-button">
      <Save class="w-5 h-5" />
      Save As...
    </button>
  </div>

  <div class="control-group">
    <label class="control-label">
      <input type="checkbox" id="auto-update" checked />
      Auto-update
    </label>
  </div>
</div>

<style>
  @reference "tailwindcss";

  .mermaid-controls {
    @apply flex flex-wrap gap-4 p-4 bg-gray-50 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700;
  }

  .control-group {
    @apply flex gap-2;
  }

  .control-button {
    @apply flex items-center gap-2 px-3 py-2 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300
           border border-gray-300 dark:border-gray-600 rounded-full hover:bg-gray-50 dark:hover:bg-gray-700
           transition-colors text-sm font-medium;
  }

  .control-button svg {
    @apply w-5 h-5;
  }

  .control-label {
    @apply flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400 cursor-pointer;
  }

  .control-label input[type="checkbox"] {
    @apply w-4 h-4 text-blue-600 border-gray-300 dark:border-gray-600 rounded focus:ring-blue-600;
  }
</style>

<script>
  import { setupControls } from "../shared/core/controls.js";

  // Initialize controls when component is mounted
  document.addEventListener("DOMContentLoaded", () => {
    setupControls();
  });
</script>
