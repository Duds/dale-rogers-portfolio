---
import { getCollection } from "astro:content";
import Layout from "@/layouts/BaseLayout.astro";
import CaseStudyCard from "@/components/features/case-studies/components/CaseStudyCard.astro";
import PageHeader from "@/components/ui/PageHeader.astro";
import Pagination from "@/components/ui/Pagination.astro";
import Container from "@/components/layout/Container.astro";
import "@/styles/components/work-page.css";

export const prerender = true;

// Pagination configuration
const ITEMS_PER_PAGE = 6;

// Get all case studies and sort by publication date
const caseStudies = await getCollection("case-studies");
const sortedCaseStudies = caseStudies.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Build filter data
const industries = Array.from(
  new Set(sortedCaseStudies.map((s) => s.data.industry).filter(Boolean))
).sort();
const tags = Array.from(
  new Set(sortedCaseStudies.flatMap((s) => s.data.tags || []))
).sort();

// Get current page from URL params
const currentPage = parseInt(Astro.url.searchParams.get("page") || "1");
const totalPages = Math.ceil(sortedCaseStudies.length / ITEMS_PER_PAGE);

// Validate current page
const validPage = Math.max(1, Math.min(currentPage, totalPages));

// Get case studies for current page
const startIndex = (validPage - 1) * ITEMS_PER_PAGE;
const endIndex = startIndex + ITEMS_PER_PAGE;
const currentCaseStudies = sortedCaseStudies.slice(startIndex, endIndex);

// Pagination URL helper
const getPageUrl = (page: number) => {
  const url = new URL(Astro.url);
  if (page === 1) {
    url.searchParams.delete("page");
  } else {
    url.searchParams.set("page", page.toString());
  }
  return url.pathname + url.search;
};
---

<Layout 
  title="Work & Case Studies | Dale Rogers - Service Designer and Digital Strategist"
  description="Explore my portfolio of successful projects and learn how I've helped clients achieve their goals through innovative service design solutions."
>
  <Container narrow={true}>
    <PageHeader
      title="Work & Case Studies"
      description="Explore my portfolio of successful projects and learn how I've helped clients achieve their goals through innovative service design solutions."
    />
  </Container>

  <Container>
    <div class="work-page">
      <!-- Enhanced Accessible Filters -->
      <section class="work-filters" aria-labelledby="filters-heading">
        <div class="work-filters__header">
          <h2 id="filters-heading" class="work-filters__title">
            Filter Case Studies
          </h2>
          <p class="work-filters__subtitle">
            Find projects by industry, technology, or focus area
          </p>
        </div>

        <form id="filters" class="work-filters__form" onsubmit="return false">
          <div class="work-filters__controls">
            <label class="work-filters__control">
              <span class="work-filters__label">Industry</span>
              <select
                id="filter-industry"
                class="work-filters__select"
                aria-describedby="industry-help"
              >
                <option value="">All Industries</option>
                {industries.map((ind) => <option value={ind}>{ind}</option>)}
              </select>
              <span id="industry-help" class="work-filters__help">
                Filter by client industry
              </span>
            </label>

            <label class="work-filters__control">
              <span class="work-filters__label">Technology</span>
              <select
                id="filter-tag"
                class="work-filters__select"
                aria-describedby="tag-help"
              >
                <option value="">All Technologies</option>
                {tags.map((t) => <option value={t}>{t}</option>)}
              </select>
              <span id="tag-help" class="work-filters__help">
                Filter by technology or methodology
              </span>
            </label>

            <button
              id="filters-clear"
              type="button"
              class="work-filters__clear"
              aria-label="Clear all filters"
            >
              <svg
                class="work-filters__clear-icon"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                aria-hidden="true"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
              Clear Filters
            </button>
          </div>
        </form>
      </section>

      <!-- Results Summary -->
      <div class="work-results-summary">
        <p class="work-results-summary__text">
          Showing <span id="results-count" class="work-results-summary__count">
            {currentCaseStudies.length}
          </span> of {sortedCaseStudies.length} case studies
          {totalPages > 1 && ` (Page ${validPage} of ${totalPages})`}
        </p>
      </div>

      <!-- Case Studies Grid -->
      <div
        class="case-studies-grid"
        id="case-studies-grid"
        role="list"
        aria-label="Case studies"
        aria-live="polite"
        aria-atomic="false"
      >
        {
          currentCaseStudies.map((study) => (
            <div role="listitem" class="case-studies-grid__item">
              <CaseStudyCard
                title={study.data.title}
                description={study.data.description}
                client={study.data.client}
                industry={study.data.industry}
                duration={study.data.duration}
                tags={study.data.tags}
                href={`/work/${study.slug}`}
                coverImage={study.data.coverImage}
              />
            </div>
          ))
        }
      </div>

      <!-- Pagination -->
      {totalPages > 1 && (
        <Pagination
          currentPage={validPage}
          totalPages={totalPages}
          getPageUrl={getPageUrl}
        />
      )}

      <!-- Enhanced Empty State -->
      {
        sortedCaseStudies.length === 0 && (
          <div class="empty-state" role="status" aria-live="polite">
            <div class="empty-state__content">
              <div class="empty-state__icon">
                <svg
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                  aria-hidden="true"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                  />
                </svg>
              </div>
              <h3 class="empty-state__title">No Case Studies Yet</h3>
              <p class="empty-state__description">
                I'm currently working on some exciting projects. Check back soon
                for detailed case studies!
              </p>
            </div>
          </div>
        )
      }

      <!-- No Results State (for filtered results) -->
      <div
        id="no-results"
        class="no-results hidden"
        role="status"
        aria-live="polite"
      >
        <div class="no-results__content">
          <div class="no-results__icon">
            <svg
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              aria-hidden="true"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
              />
            </svg>
          </div>
          <h3 class="no-results__title">No Results Found</h3>
          <p class="no-results__description">
            Try adjusting your filters or browse all case studies below.
          </p>
          <button id="show-all-results" class="no-results__button" type="button">
            Show All Case Studies
          </button>
        </div>
      </div>
    </div>
  </Container>

  <script>
    const grid = document.getElementById("case-studies-grid")!;
    const selIndustry = document.getElementById(
      "filter-industry"
    ) as HTMLSelectElement;
    const selTag = document.getElementById("filter-tag") as HTMLSelectElement;
    const btnClear = document.getElementById(
      "filters-clear"
    ) as HTMLButtonElement;
    const resultsCount = document.getElementById("results-count");
    const noResults = document.getElementById("no-results");
    const showAllResults = document.getElementById(
      "show-all-results"
    ) as HTMLButtonElement;

    function updateResultsCount(visibleCount: number) {
      if (resultsCount) {
        resultsCount.textContent = visibleCount.toString();
        resultsCount.setAttribute(
          "aria-label",
          `${visibleCount} case studies found`
        );
      }
    }

    function showNoResults() {
      if (noResults) {
        noResults.classList.remove("hidden");
        grid.classList.add("hidden");
        updateResultsCount(0);
      }
    }

    function showResults() {
      if (noResults) {
        noResults.classList.add("hidden");
        grid.classList.remove("hidden");
      }
    }

    function matchesFilters(card: Element): boolean {
      const industry = card.getAttribute("data-industry") || "";
      const tags = (card.getAttribute("data-tags") || "").toLowerCase();
      const filterIndustry = selIndustry.value;
      const filterTag = selTag.value.toLowerCase();

      if (filterIndustry && industry !== filterIndustry) return false;
      if (
        filterTag &&
        !tags
          .split(",")
          .map((t) => t.trim())
          .includes(filterTag)
      )
        return false;
      return true;
    }

    function applyFilters() {
      const items = grid.querySelectorAll("article");
      let visibleCount = 0;

      items.forEach((item) => {
        const show = matchesFilters(item);
        const listItem = item.parentElement;

        if (listItem) {
          if (show) {
            listItem.style.display = "block";
            listItem.classList.add("opacity-100", "translate-y-0");
            visibleCount++;
          } else {
            listItem.style.display = "none";
          }
        }
      });

      if (visibleCount === 0) {
        showNoResults();
      } else {
        showResults();
        updateResultsCount(visibleCount);
      }

      grid.setAttribute("aria-busy", "false");
    }

    function initFilters() {
      grid.setAttribute("aria-busy", "true");

      selIndustry.addEventListener("change", applyFilters);
      selTag.addEventListener("change", applyFilters);

      btnClear.addEventListener("click", (e) => {
        e.preventDefault();
        selIndustry.value = "";
        selTag.value = "";
        applyFilters();
      });

      if (showAllResults) {
        showAllResults.addEventListener("click", () => {
          selIndustry.value = "";
          selTag.value = "";
          applyFilters();
        });
      }

      applyFilters();
    }

    // Respect reduced motion for animations
    const style = document.createElement("style");
    style.textContent = `
      @media (prefers-reduced-motion: reduce) {
        .group:hover { transform: none !important }
        .case-studies-grid__item { transition: none !important }
      }
    `;
    document.head.appendChild(style);

    document.addEventListener("DOMContentLoaded", initFilters);
  </script>
</Layout>
