---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Container from "@/components/layout/Container.astro";
import TagList from "@/components/features/tags/TagList.astro";
import Heading from "@/components/ui/Heading.astro";
import { getCollection } from "astro:content";

// Get all content
const articles = await getCollection("articles");
const caseStudies = await getCollection("case-studies");
const scratchPosts = await getCollection("scratch");

// Combine all content
const allContent = [...articles, ...caseStudies, ...scratchPosts];

// Get tag counts
const tagCounts = allContent.reduce(
  (acc, entry) => {
    entry.data.tags?.forEach((tag) => {
      const normalizedTag = tag.toLowerCase();
      acc[normalizedTag] = (acc[normalizedTag] || 0) + 1;
    });
    return acc;
  },
  {} as Record<string, number>
);

// Sort tags by count (descending) and then alphabetically
const sortedTags = Object.entries(tagCounts).sort(
  ([tagA, countA], [tagB, countB]) => {
    // Explicitly type the counts as numbers
    const numCountA = countA as number;
    const numCountB = countB as number;

    if (numCountA === numCountB) {
      return tagA.localeCompare(tagB);
    }
    return numCountB - numCountA;
  }
);

// Get just the tag names for the TagList component
const allTags = sortedTags.map(([tag]) => tag);
---

<BaseLayout title="Tags | Dale Rogers" description="Browse content by tags">
  <Container class="py-16">
    <div class="max-w-4xl mx-auto">
      <Heading level={1} font="fraunces" size="xl" class="mb-8">
        Browse by Tag
      </Heading>
      <p class="text-gray-600 dark:text-gray-400 mb-12">
        Browse all content by tags. Click on a tag to see related articles, case
        studies, and scratch posts.
      </p>

      <div class="mb-10">
        <TagList tags={allTags} />
      </div>

      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
        {
          sortedTags.map(([tag, count]) => (
            <a
              href={`/tags/${tag}`}
              class="group p-4 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
            >
              <Heading
                level={2}
                font="fraunces"
                size="2xl"
                class="group-hover:text-primary transition-colors"
              >
                {tag.charAt(0).toUpperCase() + tag.slice(1)}
              </Heading>
              <p class="text-gray-600 dark:text-gray-400">
                {count} item{count === 1 ? "" : "s"}
              </p>
            </a>
          ))
        }
      </div>
    </div>
  </Container>
</BaseLayout>
