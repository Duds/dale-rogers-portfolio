---
/* This is the dynamic case study template that will render individual case studies */

// TODO: Fix linter error - Investigate and resolve the issue with unused CaseStudyEntry interface
// and potential type mismatches between CollectionEntry and CaseStudyEntry

import { getCollection, type CollectionEntry } from "astro:content";
import CaseStudyLayout from "@/layouts/CaseStudyLayout.astro";

// Add prerender directive to generate static pages
export const prerender = true;

// Define what paths to be prerendered
export async function getStaticPaths() {
  const caseStudies = await getCollection("case-studies");
  return caseStudies.map((caseStudy) => ({
    params: { slug: caseStudy.slug },
    props: { caseStudy },
  }));
}

interface Props {
  caseStudy: CollectionEntry<"case-studies">;
}

const { caseStudy } = Astro.props;
const { Content } = await caseStudy.render();

// Type-safe error handling
if (!caseStudy || typeof caseStudy.slug !== "string") {
  throw new Error("Invalid case study data");
}
---

<CaseStudyLayout caseStudy={caseStudy}>
  <Content />
</CaseStudyLayout>
