---
interface SearchResult {
  title: string;
  description: string;
  category: string;
  url: string;
}

interface Props {
  results: SearchResult[];
}

const { results } = Astro.props;

// Group results by category
const groupedResults = results.reduce(
  (acc, result) => {
    const category = result.category;
    if (!acc[category]) {
      acc[category] = [];
    }
    acc[category].push(result);
    return acc;
  },
  {} as Record<string, SearchResult[]>
);
---

<div
  class="w-full max-w-xl border border-gray-200 dark:border-text-primary rounded-lg shadow-lg backdrop-blur-sm"
style="background-color: var(--color-background-secondary);"
  role="listbox"
>
  {
    results.length === 0 ? (
      <div class="p-4 text-sm text-gray-500 dark:text-gray-400">
        No matching articles or case studies found.
      </div>
    ) : (
      <div class="divide-y divide-gray-100 dark:divide-text-primary">
        {Object.entries(groupedResults).map(([category, categoryResults]) => (
          <div class="p-2">
            <h3 class="px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase">
              {category}
            </h3>
            {categoryResults.map((result) => (
              <a
                href={result.url}
                class="block p-2 hover:bg-gray-50 dark:hover: rounded-md transition-colors duration-150" style="background-color: var(--color-text-primary);"
                role="option"
              >
                <div class="font-medium text-gray-900 dark:text-gray-100">
                  {result.title}
                </div>
                <div class="text-sm text-gray-500 dark:text-gray-400">
                  {result.description}
                </div>
              </a>
            ))}
          </div>
        ))}
      </div>
    )
  }
</div>
