---
interface Props {
  title: string;
  description: string;
  client: string;
  industry: string;
  duration: string;
  tags: string[];
  href: string;
  coverImage?: string;
}

const {
  title,
  description,
  client,
  industry,
  duration,
  tags,
  href,
  coverImage,
} = Astro.props;

import Tag from "@/components/ui/Tag.astro";
import { ChevronRight } from 'lucide-astro';
import "@/styles/components/case-studies.css";
---

<article
  class="group bg-white dark: rounded-3xl shadow-lg dark:shadow-xl overflow-hidden transition-all duration-500 hover:shadow-2xl dark:hover:shadow-2xl hover:-translate-y-3 border  dark:border-text-secondary" style="border-color: var(--color-border-primary);" style="background-color: var(--color-text-primary);"
  data-industry={industry}
  data-tags={tags.join(",")}
>
  {
    coverImage && (
      <div class="relative aspect-[4/3] w-full overflow-hidden">
        <img
          src={coverImage}
          alt={`Cover image for ${title}`}
          class="w-full h-full object-cover transition-transform duration-700 ease-out group-hover:scale-110"
          width="800"
          height="600"
          loading="lazy"
          decoding="async"
          sizes="(min-width: 1280px) 33vw, (min-width: 768px) 50vw, 100vw"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent opacity-90 group-hover:opacity-70 transition-opacity duration-500" />

        <!-- Badge container with flexbox for proper stacking -->
        <div class="absolute top-4 left-4 flex flex-col gap-2">
          <!-- Client badge -->
          <span class="w-fit inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold bg-white/95 dark:bg-black/95 dark:text-white backdrop-blur-sm shadow-lg border border-white/20 dark:border-black/20 break-words text-wrap" style="color: var(--color-text-primary);">
            {client}
          </span>
 
          <!-- Industry badge -->
          <span class="w-fit inline-flex items-center px-3 py-1.5 rounded-full text-xs font-medium bg-orange-600/90 text-white backdrop-blur-sm shadow-lg" style="background-color: var(--color-accent-main);">
            {industry}
          </span>
        </div>
      </div>
    )
  }

  <div class="p-8">
    <!-- Title with enhanced typography -->
    <h3 class="mb-6">
      <a
        href={href}
        aria-label={`View case study: ${title}`}
        class="text-2xl font-heading font-bold text-gray-900 dark:text-white leading-tight hover:text-orange-600 dark:hover:text-orange-400 transition-colors duration-300 group-hover:text-orange-600 dark:group-hover:text-orange-400 focus:outline-none focus-visible:ring-2 focus-visible:ring-orange-600 focus-visible:ring-offset-2 rounded"
        style="color: var(--color-text-primary);"
      >
        {title}
      </a>
    </h3>

    <!-- Description with improved readability -->
    <p class="dark: mb-8 leading-relaxed text-base" style="color: var(--color-text-muted);" style="color: var(--color-text-secondary);">
      {description}
    </p>

    <!-- Project metadata with better organization -->
    <div class="space-y-4 mb-8">
      <div class="grid grid-cols-1 gap-3 text-sm">
        <div class="flex items-center justify-between py-3 px-4 bg-gradient-to-r from-background-tertiary to-white dark:from-text-primary dark:to-text-primary rounded-xl border  dark:border-text-secondary" style="border-color: var(--color-border-primary);">
          <span class="font-semibold  dark: uppercase tracking-wide text-xs" style="color: var(--color-text-muted);" style="color: var(--color-text-secondary);">
            Duration
          </span>
          <span class="dark:text-white font-semibold" style="color: var(--color-text-primary);">
            {duration}
          </span>
        </div>
      </div>
    </div>

    <!-- Tags with enhanced styling -->
    <div class="flex flex-wrap gap-3 mb-6">
      {
        tags.slice(0, 3).map((tag) => (
          <a href={`/tags/${tag.toLowerCase()}`} class="group/tag" aria-label={`View tag: ${tag}`}>
            <Tag text={tag} clickable={true} class="group-hover/tag:bg-orange-700 group-hover/tag:text-white transition-all duration-300 text-sm" />
          </a>
        ))
      }
      {tags.length > 3 && (
        <span class="inline-flex items-center px-3 py-1.5 rounded-full text-xs font-medium bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300">
          +{tags.length - 3} more
        </span>
      )}
    </div>

    <!-- View case study link -->
    <div class="pt-4 border-t  dark:border-text-secondary" style="border-color: var(--color-border-primary);">
      <a
        href={href}
        aria-label={`View case study: ${title}`}
        class="inline-flex items-center text-sm font-semibold text-orange-600 dark:text-orange-400 hover:text-orange-700 dark:hover:text-orange-500 transition-all duration-300 group-hover:underline focus:outline-none focus-visible:ring-2 focus-visible:ring-orange-600 focus-visible:ring-offset-2 rounded" style="color: var(--color-accent-main);"
      >
        View Case Study
        <ChevronRight class="w-4 h-4 ml-2 transition-transform duration-300 group-hover:translate-x-1" />
      </a>
    </div>
  </div>

  <!-- Subtle background pattern -->
  <div class="absolute inset-0 bg-gradient-to-br from-transparent via-transparent to-purple-50/30 dark:to-purple-900/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none rounded-3xl"></div>
</article>
