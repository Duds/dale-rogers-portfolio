---
/**
 * @fileoverview Theme toggle component for switching between light and dark modes.
 * Features professional styling with smooth transitions and accessibility.
 */

interface Props {
  /** Additional CSS classes */
  class?: string;
}

const { class: className } = Astro.props;

const baseClasses = "theme-toggle";
const combinedClasses = [baseClasses, className]
  .filter(Boolean)
  .join(" ");
---

<button
  id="theme-toggle"
  class={combinedClasses}
  type="button"
  aria-label="Toggle theme"
  aria-pressed="false"
>
  <span class="theme-toggle__icon theme-toggle__icon--light">
    <svg
      class="w-6 h-6"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      aria-hidden="true"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
      />
    </svg>
  </span>
  <span class="theme-toggle__icon theme-toggle__icon--dark">
    <svg
      class="w-6 h-6"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      aria-hidden="true"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
      />
    </svg>
  </span>
</button>

<script>
  const initThemeToggle = () => {
    const toggle = document.getElementById("theme-toggle");
    const root = document.documentElement;
    const iconLight = document.querySelector(".theme-toggle__icon--light");
    const iconDark = document.querySelector(".theme-toggle__icon--dark");

    if (!toggle || !iconLight || !iconDark) return;

    // Update toggle state based on current theme
    const updateToggleState = () => {
      const isDark = root.classList.contains("dark");
      toggle.setAttribute("aria-pressed", isDark.toString());
    };

    // Toggle theme function
    const toggleTheme = () => {
      const isDark = root.classList.contains("dark");
      
      if (isDark) {
        root.classList.remove("dark");
        localStorage.setItem("theme", "light");
      } else {
        root.classList.add("dark");
        localStorage.setItem("theme", "dark");
      }
      
      updateToggleState();
    };

    // Event listeners
    toggle.addEventListener("click", toggleTheme);
    
    // Keyboard support
    toggle.addEventListener("keydown", (e) => {
      if (e.key === "Enter" || e.key === " ") {
        e.preventDefault();
        toggleTheme();
      }
    });

    // Initial state update
    updateToggleState();
  };

  // Initialize theme toggle on page load
  document.addEventListener("astro:page-load", initThemeToggle);
  document.addEventListener("DOMContentLoaded", initThemeToggle);
</script>
