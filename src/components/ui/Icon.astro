---
/**
 * Icon component using Lucide icons.
 * Provides a consistent interface for using icons across the site.
 */
import { z } from "astro:content";
import { 
  Calendar, 
  User, 
  Users, 
  Tag, 
  CheckCircle, 
  ShieldCheck, 
  Lightbulb, 
  Eye, 
  Map, 
  TrendingUp, 
  BarChart3, 
  Flag, 
  Info, 
  AlertTriangle, 
  Search, 
  Edit, 
  Clock, 
  Zap, 
  Smartphone, 
  FileMinus, 
  Globe, 
  ArrowLeftRight, 
  Link, 
  Puzzle, 
  Grid3X3, 
  Beaker, 
  ClipboardCheck, 
  ShieldAlert, 
  Sparkles, 
  Trophy, 
  Smile, 
  DollarSign, 
  GraduationCap, 
  Heart, 
  Mail, 
  Linkedin, 
  ChevronRight,
  ArrowRight,
  Plus,
  Minus,
  X,
  Check,
  AlertCircle,
  Sun,
  Moon,
  BookOpen,
  Star,
  Compass,
  Target,
  Cog,
  Rocket,
  Building,
  Database,
  Hand,
  RotateCcw,
  Palette,
  Accessibility,
  Repeat
} from 'lucide-astro';

// Define props using Zod for type safety, aligning with potential schema usage
export const Props = z.object({
  name: z.string(),
  class: z.string().optional(),
  // size is not used currently but kept for potential future integration
  size: z.number().optional(),
});

// Infer TypeScript type from Zod schema
type Props = z.infer<typeof Props>;

const { name, class: className } = Astro.props;

// Icon mapping object
const iconMap = {
  calendar: Calendar,
  user: User,
  users: Users,
  tag: Tag,
  "check-circle": CheckCircle,
  "shield-check": ShieldCheck,
  lightbulb: Lightbulb,
  eye: Eye,
  map: Map,
  "trending-up": TrendingUp,
  "bar-chart": BarChart3,
  flag: Flag,
  info: Info,
  warning: AlertTriangle,
  search: Search,
  edit: Edit,
  clock: Clock,
  zap: Zap,
  "device-mobile": Smartphone,
  "file-minus": FileMinus,
  "globe-asia-australia": Globe,
  "arrows-right-left": ArrowLeftRight,
  link: Link,
  "puzzle-piece": Puzzle,
  "squares-2x2": Grid3X3,
  beaker: Beaker,
  "clipboard-document-check": ClipboardCheck,
  "shield-exclamation": ShieldAlert,
  sparkles: Sparkles,
  trophy: Trophy,
  "face-smile": Smile,
  "currency-dollar": DollarSign,
  "academic-cap": GraduationCap,
  heart: Heart,
  mail: Mail,
  linkedin: Linkedin,
  medium: BookOpen, // Use BookOpen as fallback for Medium
  "chevron-right": ChevronRight,
  "arrow-right": ArrowRight,
  plus: Plus,
  minus: Minus,
  x: X,
  check: Check,
  "alert-circle": AlertCircle,
  sun: Sun,
  moon: Moon,
  "book-open": BookOpen,
  star: Star,
  compass: Compass,
  target: Target,
  cog: Cog,
  rocket: Rocket,
  "magnifying-glass": Search, // Use Search for magnifying glass
  "building-library": Building, // Use Building for building library
  database: Database,
  hand: Hand,
  "arrows-rotate": RotateCcw, // Use RotateCcw for arrows rotate
  "chart-line": TrendingUp, // Use TrendingUp for chart line
  palette: Palette,
  "universal-access": Accessibility, // Use Accessibility for universal access
  repeat: Repeat,
  "chart-bar": BarChart3, // Use BarChart3 for chart bar
  strategy: Compass, // Map strategy to compass
  design: Puzzle, // Map design to puzzle
  transform: Cog, // Map transform to cog
  innovate: Lightbulb // Map innovate to lightbulb
};

// Get the icon component or fallback to Info
const IconComponent = iconMap[name as keyof typeof iconMap] || Info;
---

<style>
  svg {
    vertical-align: middle;
    display: inline-block;
  }
</style>

<IconComponent class={className} />
