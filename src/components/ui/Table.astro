---
/**
 * Accessible, theme-aware Table component for articles and content.
 * @component Table
 * @prop {string} caption - Table caption for accessibility and context
 * @prop {string[]} headers - Array of column headers
 * @prop {string[][]} rows - Array of row arrays (each row is an array of cell strings)
 * @prop {string} [class] - Optional additional CSS classes
 *
 * @example
 * <Table
 *   caption="Tensions between Western Design Norms and First Nations Contexts"
 *   headers={["Western Design Norm", "Conflict in First Nations Context"]}
 *   rows={[["Fixed deadlines", "May clash with seasonal rhythms and cultural ceremony"]]}
 * />
 *
 * @accessibility
 * - Uses semantic <table>, <caption>, <thead>, <tbody>, <tr>, <th>, <td>
 * - Caption is always rendered for screen readers
 * - Supports keyboard navigation and proper contrast
 * - Responsive and theme-aware (light/dark)
 */
interface Props {
  caption: string;
  headers: string[];
  rows: string[][];
  class?: string;
}

const { caption, headers, rows, class: className = "" } = Astro.props;
---

<div class="overflow-x-auto">
  <table
    class={`w-full border-collapse my-8 rounded-lg overflow-hidden bg-white dark:bg-neutral-900 ${className}`}
  >
    <caption
      class="text-base font-semibold mb-4 text-left text-neutral-700 dark:text-neutral-200 px-2 py-2"
    >
      {caption}
    </caption>
    <thead class="bg-neutral-100 dark:bg-neutral-800">
      <tr>
        {
          headers.map((header) => (
            <th
              scope="col"
              class="px-4 py-3 text-left font-bold text-neutral-900 dark:text-neutral-100 border-b border-neutral-200 dark:border-neutral-700 text-base"
            >
              {header}
            </th>
          ))
        }
      </tr>
    </thead>
    <tbody>
      {
        rows.map((row, i) => (
          <tr
            class={
              i % 2 === 0
                ? "bg-white dark:bg-neutral-900"
                : "bg-neutral-50 dark:bg-neutral-800"
            }
          >
            {row.map((cell) => (
              <td class="px-4 py-3 align-top text-neutral-700 dark:text-neutral-200 border-b border-neutral-100 dark:border-neutral-800 text-base">
                {cell}
              </td>
            ))}
          </tr>
        ))
      }
    </tbody>
  </table>
</div>

<style>
  table {
    @apply w-full border-collapse my-8 rounded-lg overflow-hidden bg-white dark:bg-neutral-900;
  }
  caption {
    @apply text-base font-semibold mb-4 text-left text-neutral-700 dark:text-neutral-200 px-2 py-2;
  }
  th,
  td {
    @apply px-4 py-3;
  }
  th {
    @apply text-left font-bold text-neutral-900 dark:text-neutral-100 border-b border-neutral-200 dark:border-neutral-700 text-base;
  }
  td {
    @apply align-top text-neutral-700 dark:text-neutral-200 border-b border-neutral-100 dark:border-neutral-800 text-base;
  }
  tr:nth-child(even) {
    @apply bg-neutral-50 dark:bg-neutral-800;
  }
  tr:nth-child(odd) {
    @apply bg-white dark:bg-neutral-900;
  }
</style>
