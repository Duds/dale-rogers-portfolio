---
/**
 * @fileoverview Navigation component for site navigation.
 * Features professional styling with mobile responsiveness, theme toggle, search functionality,
 * and proper semantic navigation with accessibility features.
 */

import ThemeToggle from '@/components/ui/ThemeToggle.astro';
import SearchInput from '@/components/features/search/SearchInput.astro';
import Container from './Container.astro';
import '@/styles/components/navigation.css';

interface Props {
  /** Additional CSS classes */
  class?: string;
}

const { class: className } = Astro.props;

const baseClasses = 'navigation';
const combinedClasses = [baseClasses, className].filter(Boolean).join(' ');

// Get current path for active state detection
const currentPath = Astro.url.pathname;

// Navigation items
const navItems = [
  { href: '/work', text: 'Work', ariaLabel: 'View portfolio work' },
  {
    href: '/articles',
    text: 'Articles',
    ariaLabel: 'Read articles and insights',
  },
];

// Helper function to determine if a nav item is active
const isActive = (href: string): boolean => {
  if (href === '/') return currentPath === '/';
  return currentPath.startsWith(href);
};
---

<nav class={combinedClasses} role="navigation" aria-label="Main navigation">
  <Container>
    <div class="navigation__content">
      <!-- Brand/Logo -->
      <div class="navigation__brand">
        <a href="/" class="navigation__logo" aria-label="Dale Rogers - Homepage"> Dale Rogers </a>
      </div>

      <!-- Mobile Menu Button -->
      <button
        class="navigation__mobile-toggle"
        type="button"
        aria-controls="main-navigation"
        aria-expanded="false"
        aria-label="Toggle navigation menu"
        id="mobile-menu-button"
      >
        <span class="navigation__hamburger">
          <span class="navigation__hamburger-line"></span>
          <span class="navigation__hamburger-line"></span>
          <span class="navigation__hamburger-line"></span>
        </span>
      </button>

      <!-- All Navigation Items (Right Side) -->
      <div class="navigation__right">
        <!-- Search Input -->
        <div class="navigation__search">
          <SearchInput />
        </div>

        <!-- Navigation Menu -->
        <div class="navigation__menu" id="main-navigation" aria-labelledby="mobile-menu-button">
          <ul class="navigation__list" role="menubar">
            {
              navItems.map(item => {
                const activeClass = isActive(item.href) ? 'navigation__link--active' : '';
                return (
                  <li class="navigation__item" role="none">
                    <a
                      href={item.href}
                      class={`navigation__link ${activeClass}`}
                      role="menuitem"
                      aria-label={item.ariaLabel}
                      aria-current={isActive(item.href) ? 'page' : undefined}
                    >
                      {item.text}
                    </a>
                  </li>
                );
              })
            }
          </ul>
        </div>

        <!-- Contact Link -->
        <div class="navigation__contact">
          <a
            href="/contact"
            class="navigation__link"
            role="menuitem"
            aria-label="Get in touch"
            aria-current={isActive('/contact') ? 'page' : undefined}
          >
            Contact
          </a>
        </div>

        <!-- Theme Toggle -->
        <div class="navigation__theme">
          <ThemeToggle />
        </div>
      </div>
    </div>
  </Container>
</nav>

<script>
  /**
   * Mobile navigation toggle functionality
   */
  function initMobileNavigation() {
    const mobileButton = document.getElementById('mobile-menu-button');
    const navigation = document.getElementById('main-navigation');

    if (!mobileButton || !navigation) return;

    const toggleMobileMenu = () => {
      const isExpanded = mobileButton.getAttribute('aria-expanded') === 'true';
      const newState = !isExpanded;

      mobileButton.setAttribute('aria-expanded', newState.toString());
      mobileButton.classList.toggle('navigation__mobile-toggle--active', newState);
      navigation.classList.toggle('navigation__menu--open', newState);

      // Prevent body scroll when menu is open
      document.body.classList.toggle('navigation-open', newState);
    };

    // Toggle on button click
    mobileButton.addEventListener('click', toggleMobileMenu);

    // Close menu when clicking outside
    document.addEventListener('click', event => {
      const target = event.target as Node;
      if (!mobileButton.contains(target) && !navigation.contains(target)) {
        if (mobileButton.getAttribute('aria-expanded') === 'true') {
          toggleMobileMenu();
        }
      }
    });

    // Close menu on escape key
    document.addEventListener('keydown', event => {
      if (event.key === 'Escape' && mobileButton.getAttribute('aria-expanded') === 'true') {
        toggleMobileMenu();
      }
    });

    // Close menu when navigating to a new page
    const navLinks = navigation.querySelectorAll('a[role="menuitem"]');
    navLinks.forEach(link => {
      link.addEventListener('click', () => {
        if (mobileButton.getAttribute('aria-expanded') === 'true') {
          toggleMobileMenu();
        }
      });
    });
  }

  // Initialize on DOM content loaded
  document.addEventListener('DOMContentLoaded', initMobileNavigation);

  // Re-initialize on Astro page navigation
  document.addEventListener('astro:page-load', initMobileNavigation);
</script>
