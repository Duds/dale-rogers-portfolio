---
import Container from "@/components/layout/Container.astro";
import Button from "@/components/ui/Button.astro";
import "@/styles/components/services.css";

interface Service {
  title: string;
  description: string;
  imageUrl: string;
  link: string;
}

interface ServiceData extends Service {
  variant: "purple" | "black" | "green" | "orange";
}

const getVariantClasses = (variant: ServiceData["variant"]) => {
  const variants = {
    purple: "bg-service-purple hover:bg-service-purple-hover",
    black: "bg-service-black hover:bg-service-black-hover",
    green: "bg-service-green hover:bg-service-green-hover",
    orange: "bg-service-orange hover:bg-service-orange-hover",
  };
  return variants[variant];
};

// Define services with their variants and Unsplash images
const services: ServiceData[] = [
  {
    title: "Service Design",
    description:
      "Creating seamless experiences that work for users and organisations",
    imageUrl:
      "https://images.unsplash.com/photo-1552664730-d307ca884978?q=80&w=2940&fit=crop",
    link: "/services/service-design",
    variant: "purple",
  },
  {
    title: "Digital Strategy",
    description: "Aligning technology with your business objectives",
    imageUrl:
      "https://images.unsplash.com/photo-1553484771-047a44eee27a?q=80&w=2940&fit=crop",
    link: "/services/digital-strategy",
    variant: "black",
  },
  {
    title: "Research & Testing",
    description: "Understanding your users through evidence-based insights",
    imageUrl:
      "https://images.unsplash.com/photo-1517245386807-bb43f82c33c4?q=80&w=2940&fit=crop",
    link: "/services/research-testing",
    variant: "green",
  },
  {
    title: "Training & Capability",
    description: "Building design capability in your organisation",
    imageUrl:
      "https://images.unsplash.com/photo-1522071820081-009f0129c71c?q=80&w=2940&fit=crop",
    link: "/services/training-capability",
    variant: "orange",
  },
];
---

<section class="services-section">
  <Container fullWidth={true}>
    <div class="services-container">
      <div class="col-span-12 lg:col-span-4">
        <h2 class="services-heading">Services</h2>
        <p class="services-title">
          Designing services that people trust and teams can deliver.
        </p>
      </div>
      <div class="col-span-12 lg:col-span-8 flex items-end justify-end">
        <Button variant="primary" href="/services">
          See how it works
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fill-rule="evenodd"
              d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
              clip-rule="evenodd"></path>
          </svg>
        </Button>
      </div>
    </div>
    <div class="services-list">
      {
        services?.map((service: ServiceData) => (
          <a
            href={service.link}
            class={`services-card ${getVariantClasses(service.variant)}`}
          >
            <div class="services-card-image">
              <img
                src={service.imageUrl}
                alt=""
                aria-hidden="true"
                class="services-card-img"
                width="400"
                height="400"
                loading="lazy"
              />
              <div class="services-card-gradient" />
            </div>
            <div class="services-card-content">
              <h3 class="services-card-title">{service.title}</h3>
              <p class="services-card-description">{service.description}</p>
            </div>
          </a>
        ))
      }
      {
        !services?.length && (
          <div class="services-empty">
            <p>No services found.</p>
          </div>
        )
      }
    </div>
  </Container>
</section>
